<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>SensorNetwork</groupId>
	<version>0.0.1-SNAPSHOT</version>
	<distributionManagement>
		<repository>
			<id>example</id>
			<name>Example</name>
			<url>example.com</url>
		</repository>
	</distributionManagement>
	<build>
		<sourceDirectory>src/main</sourceDirectory>
		<testSourceDirectory>src/test</testSourceDirectory>
		<outputDirectory>target/classes</outputDirectory>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<resources>
			<resource>
				<directory>assets</directory>
				<targetPath>assets</targetPath>
			</resource>
		</resources>
		<!-- <pluginManagement> -->
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<!--To mantain the names of the parameters of the methods when compiling -->
					<compilerArgument>-parameters</compilerArgument>
					<testCompilerArgument>-parameters</testCompilerArgument>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>deploy-all</id>
						<configuration>
							<target>

								<echo>Deployment..</echo>
								<!-- chmod non serve più perchè facciamo leggere deploy.sh a bash, 
									però lo lascio così si può far partire anche esternamente -->
								<chmod file="${project.basedir}/target/classes/assets/deploy.sh"
									perm="755" />
								<exec executable="bash"
									dir="${project.basedir}/target/classes/assets/" failonerror="true">
									<arg value="deploy.sh" />
								</exec>

								<!-- Place any ant task here. You can add anything you can add between 
									<target> and </target> in a build.xml. -->

							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>jarra-tutto</id>
						<configuration>
							<target>

								<echo>Jarrando..</echo>
								<!-- chmod non serve più perchè facciamo leggere deploy.sh a bash, 
									però lo lascio così si può far partire anche esternamente -->
								<chmod file="${project.basedir}/target/classes/assets/jarra.sh"
									perm="755" />
								<exec executable="bash"
									dir="${project.basedir}/target/classes/assets/" failonerror="true">
									<arg value="jarra.sh" />
								</exec>

								<!-- Place any ant task here. You can add anything you can add between 
									<target> and </target> in a build.xml. -->

							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<!-- </pluginManagement> -->
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>2.0.2-beta</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.pi4j</groupId>
			<artifactId>pi4j-core</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.9.10</version>
		</dependency>
		<dependency>
			<groupId>grovepi</groupId>
			<artifactId>pi4j</artifactId>
			<version>1.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/grovepi-pi4j.jar</systemPath>
		</dependency>
	</dependencies>
	<artifactId>SensorNetwork</artifactId>
</project>